delta( t, m, b, c, a_0, a_1, a_2, a_3, a_4 ) {
	if (TRIVIAL INPUT) {
		if (q is in SINGLE or q is q_trivial) {return q_trivial}
		else {return q_reject}
	}
	let t' <- a_0 + a_1
	let m' <- a_1 + a_2 + a_3
	let b' <- a_3 + a_4
	if (q' is not in Q) {return q_reject}
	if ((m' > 2) OR (t + a_0 > 2) OR (m + a_2 > 2) OR (b + a_4 > 2)) { //BRANCH
		return q_reject
	}
	if ( (!(a_0 | a_2 | a_4) & (a_1 | a_3)) OR
		(t == 1 && a_0 == 0) OR
		(m == 1 && a_2 == 0) OR
		(b == 1 && a_4 == 0) ) { // JUMP
		return q_reject
	}
	if (q is in TRIPLE) { // handle CLOSED LOOPS
		if (c == 1 && (a_2 & a_3 & a_4)) {return q_reject}
		if (c == 2 && (a_0 & a_1 & a_2)) {return q_reject}
	}
	if (q' is in TRIPLE) {
		if (q is in TRIPLE) {c' <- c}
		if (q is in SINGLE) {
			if (tmb == 100) {c' <- 1}
			if (tmb == 001) {c' <- 2}
		}
		// (q CAIN'T be in DOUBLE, because can't go DOUBLE -> TRIPLE)
	} else { // q' is in SINGLE or DOUBLE
		c' <- 0
	}
	return q' <- (t', m', b', c')
}
